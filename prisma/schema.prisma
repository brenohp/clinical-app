// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  clinicId  String?
  clinic    Clinic?  @relation(fields: [clinicId], references: [id])
  
  appointments Appointment[]
}

model Patient {
  id        String   @id @default(cuid())
  name      String
  cpf       String   @unique
  birthDate DateTime
  phone     String
  email     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  appointments Appointment[]
}

model Appointment {
  id              String   @id @default(cuid())
  appointmentDate DateTime
  status          String   @default("AGENDADA")
  notes           String?

  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])

  doctorId String
  doctor   User    @relation(fields: [doctorId], references: [id])
  
  // AJUSTE: Adicionada a relação com o tipo de serviço
  serviceTypeId String?
  serviceType   ServiceType? @relation(fields: [serviceTypeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Clinic {
  id    String   @id @default(cuid())
  name  String
  users User[]
  units ClinicUnit[]
  
  // AJUSTE: Adicionada a relação com os serviços
  services ServiceType[]
}

model ClinicUnit {
  id        String   @id @default(cuid())
  name      String
  address   String
  city      String
  state     String
  zipCode   String
  phone     String?
  
  clinicId  String
  clinic    Clinic   @relation(fields: [clinicId], references: [id])
}

// NOVO MODELO ADICIONADO ABAIXO
model ServiceType {
  id              String    @id @default(cuid())
  name            String    // Ex: "Primeira Consulta", "Retorno", "Procedimento X"
  description     String?
  durationMinutes Int       // Duração do serviço em minutos. Ex: 30, 60
  price           Decimal?  // Preço base do serviço
  isActive        Boolean   @default(true) // Para poder ativar/desativar serviços

  clinicId        String
  clinic          Clinic    @relation(fields: [clinicId], references: [id])

  appointments    Appointment[]

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}