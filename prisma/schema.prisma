// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("USER") // Ex: "ADMIN", "DOCTOR", "ASSISTANT"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[] 
}

model Patient {
  id        String   @id @default(cuid())
  name      String
  cpf       String   @unique
  birthDate DateTime
  phone     String
  email     String? // O '?' torna o campo opcional

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
}

model Appointment {
  id              String   @id @default(cuid())
  appointmentDate DateTime // Data e hora da consulta
  status          String   @default("AGENDADA") // Ex: AGENDADA, CONFIRMADA, REALIZADA, CANCELADA
  notes           String?  // Anotações opcionais

  // Relação com Paciente: Uma consulta pertence a um paciente.
  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])

  // Relação com Usuário (Médico): Uma consulta é de um médico.
  doctorId String
  doctor   User   @relation(fields: [doctorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}